@model CapModel.Recruiter
@*Main Author Name: Jasmine Gill
    Description of Page:Allows Recruiter to edit their profile*@
@{
    ViewBag.Title = "Edit";
}

<h2>Edit Your Porfile</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Recruiter</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.RecId)

        <div class="form-group">
            @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JobTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HasAccess, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HasAccess, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.HasAccess, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.HiddenFor(model => model.CompanyCompId)
        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


@*<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.JobTitle, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(m => m.JobTitle, new { @class = "form-control" })
                    </div>
                </div>
               <div class="form-group">
                    @Html.LabelFor(m => m.Department, new {  @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(m => m.Department, new { @class = "form-control" })
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(m => m.Location.AptNum, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(m => m.Location.AptNum, new { @class = "form-control" })
                    </div>
                </div>
                 <div class="form-group">
                    @Html.LabelFor(m => m.Location.City, new { @Value = "1", @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(m => m.Location.City, new { @Value = "1", @class = "form-control" })
                    </div>
                </div>
                 <div class="form-group">
                    @Html.LabelFor(m => m.Location.Country, new { @Value = "1", @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(m => m.Location.Country, new { @Value = "1", @class = "form-control" })
                    </div>
                </div>
                 <div class="form-group">
                    @Html.LabelFor(m => m.Location.Province, new { @Value = "1", @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(m => m.Location.Province, new { @Value = "1", @class = "form-control" })
                    </div>
                </div>
                 <div class="form-group">
                    @Html.LabelFor(m => m.Location.StreetAdd, new { @Value = "1", @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(m => m.Location.StreetAdd, new { @Value = "1", @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                 
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Log in" class="btn btn-default" />
                    </div>
                </div>

            }
        </section>
    </div>

</div>*@